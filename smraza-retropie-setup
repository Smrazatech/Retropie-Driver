#!/usr/bin/env bash

set -e

function print_version() {
    echo "Smraza-Retropie-setup v1.0"
    echo "I'm technical director of Smraza, my personal email:singing99@live.com"
    echo "Designed by Keen"
    exit 1
}

function print_help() {
    echo "    -h            Print this help"
    echo "    -v            Print version information"
    echo "    -s [rotation] Only support '0' or '180'"
    echo "    -f [refresh rate] Adjust the refresh rate,only support H/L mode"
    echo "    Tips: Refresh rate increases, which will reduce the quality of the picture."
    exit 1
}

group=SMRAZA
function info() {
    system="$1"
    group="${system}"
    shift
    FG="1;32m"
    BG="40m"
    echo -e "[\033[${FG}\033[${BG}${system}\033[0m] $*"
}

function bail() {
    FG="1;31m"
    BG="40m"
    echo -en "[\033[${FG}\033[${BG}${group}\033[0m] "
    if [ -z "$1" ]; then
        echo "Exiting due to error"
    else
        echo "Exiting due to error: $*"
    fi
    exit 1
}

function ask() {
    # http://djm.me/ask
    while true; do

        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"
            default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"
            default=N
        else
            prompt="y/n"
            default=
        fi

        # Ask the question
        read -p "$1 [$prompt] " REPLY

        # Default?
        if [ -z "$REPLY" ]; then
            REPLY=$default
        fi

        # Check if the reply is valid
        case "$REPLY" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac
    done
}

# update /boot/config.txt with appropriate values
function update_configtxt() {

if grep -q "smraza-retropie-setup" "/boot/config.txt"; then
        echo "Already have a smraza-pitft-setup section in /boot/config.txt."
        echo "Adding new section, but please run:"
        echo "sudo nano /boot/config.txt"
        echo "...and remove any duplicate sections."
        exit 1;
else

    date=`date`
    cat >> /boot/config.txt <<EOF
# --- added by smraza-retropie-setup $date ---
[pi1]
device_tree=bcm2708-rpi-b-plus.dtb
[pi2]
device_tree=bcm2709-rpi-2-b.dtb
[pi3]
device_tree=bcm2710-rpi-3-b.dtb
[all]
dtparam=audio=on
dtparam=spi=on
dtoverlay=waveshare35a,rotate=90,speed=60000000,fps=60
# --- end smraza-retropie-setup $date ---
EOF
fi
}

function Refresh_rate() {

sed -i '/dtoverlay=waveshare35a,rotate/'d /boot/config.txt
sed -i '$d' /boot/config.txt

if [ "${speed}" != L ] && [ "${speed}" != H ]; then
bail "Adjust the refresh rate,only support H/L level..."
exit 1;
elif [ "${speed}" == L ]; then
       spd=20000000
info Retropie "Open low refresh rate, high quality mode. Switch Mode: sudo ./smraza-retropie-setup -f H"
elif [ "${speed}" == H ]; then
       spd=60000000
info Retropie "Open high refresh rate, low quality mode. Switch Mode: sudo ./smraza-retropie-setup -f L"
fi

date=`date`
cat >> /boot/config.txt <<EOF
dtoverlay=waveshare35a,rotate=90,speed=$spd,fps=60
# --- end smraza-retropie-setup $date --
EOF
info Retropie "Switch mode success!"
echo
read -p "Reboot to apply changes? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
  reboot
fi
exit 1
		
}
function LCD_rotation() {

	if [ "${rotation}" == "0" ]; then
	   sed -i 's/rotate=270/rotate=90/g' "/boot/config.txt"
           info Retropie "Rotation success!"
	elif [ "${rotation}" == "180" ]; then
	   sed -i 's/rotate=90/rotate=270/g' "/boot/config.txt"
           info Retropie "Rotation success!"
	else
	   bail "Only support '0' or '180'"
	   exit 1        
	fi
echo
read -p "Reboot to apply changes? (y/n): " -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]; then
  reboot
fi
exit 1
}
function install_dtoverlays() {

sudo cp ./waveshare35a-overlay.dtb /boot/overlays/waveshare35a.dtbo
sudo cp ./waveshare35a-overlay.dtb /boot/overlays/

}

function install_fbcp() {

sudo install fbcp /usr/local/bin/fbcp

}

function install_console() {
    cat > /etc/rc.local <<EOF 
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]; then
  printf "My IP address is %s\n" "$_IP"
fi

/usr/local/bin/fbcp &

exit 0
EOF
}

# MAIN

target_homedir="/home/pi"

args=$(getopt -uo 'hvricoa:t:b:u:s:f:' -- $*)
[ $? != 0 ] && print_help
set -- $args

for i
do
    case "$i"
    in
        -h)
            print_help
            ;;
        -v)
            print_version
            ;;
        -s)
	    rotation="$2"
            echo "Rotation = ${2}"
            LCD_rotation
	    ;;
        -f)
	    speed="$2"
            echo "Refresh_rate = ${2}"            
	    Refresh_rate
	    ;;
        -c)
            Close_LCD
            ;;
    esac
done

# check init system (technique borrowed from raspi-config):
info Retropie "Install overlays..."
install_dtoverlays || bail "unable to install overlays"

info Retropie "Updating /boot/config.txt..."
update_configtxt || bail "Unable to update /boot/config.txt"

info Retropie "Install fbcp..."
install_fbcp || bail "Unable to install fbcp"

info Retropie "Install install_console..."
install_console || bail "Unable to install console"

info Retropie "Success!"
info Retropie "Notes:"
echo "Please don't run rpi-update, or you'll have to re-install a kernel"
echo "If you have any technical questions, please feel free to contact our support staff via email at support@smraza.com"
echo "Default open high refresh rate, low quality mode. If you want to open low refresh rate, high quality mode, run: sudo ./smraza-retropie-setup -f L"
echo
read -p "Reboot to apply changes? (y/n): " -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]; then
  reboot
fi
